From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: booky10 <boooky10@gmail.com>
Date: Mon, 17 Jul 2023 20:11:44 +0200
Subject: [PATCH] Resend more data on locale change

Includes advancements, inventories, entity custom names, text display texts and item frame items

diff --git a/src/main/java/net/minecraft/server/PlayerAdvancements.java b/src/main/java/net/minecraft/server/PlayerAdvancements.java
index acc49f66bf34e2507d0ee6fec0a56b11bfc68f46..6ca487aaede00451628ff136156250544b5f3026 100644
--- a/src/main/java/net/minecraft/server/PlayerAdvancements.java
+++ b/src/main/java/net/minecraft/server/PlayerAdvancements.java
@@ -72,6 +72,16 @@ public class PlayerAdvancements {
         this.load(advancementLoader);
     }
 
+    // CloudPlane start
+    public void refreshAll() {
+        this.isFirstPacket = true;
+        for (Advancement advancement : this.visible) {
+            this.markForVisibilityUpdate(advancement);
+        }
+        this.visible.clear();
+    }
+    // CloudPlane end
+
     public void setPlayer(ServerPlayer owner) {
         this.player = owner;
     }
diff --git a/src/main/java/net/minecraft/server/level/ServerPlayer.java b/src/main/java/net/minecraft/server/level/ServerPlayer.java
index 670033bf5d72a12e44b76d55c4343de1490e873b..83adabab10c71f26d238625f2fa1d61749dbf322 100644
--- a/src/main/java/net/minecraft/server/level/ServerPlayer.java
+++ b/src/main/java/net/minecraft/server/level/ServerPlayer.java
@@ -320,6 +320,10 @@ public class ServerPlayer extends Player {
         });
     }
 
+    // CloudPlane start
+    private long lastLocaleChange = 0L;
+    // CloudPlane end
+
     public ServerPlayer(MinecraftServer server, ServerLevel world, GameProfile profile) {
         super(world, world.getSharedSpawnPos(), world.getSharedSpawnAngle(), profile);
         this.chatVisibility = ChatVisiblity.FULL;
@@ -2037,15 +2041,45 @@ public class ServerPlayer extends Player {
             PlayerChangedMainHandEvent event = new PlayerChangedMainHandEvent(this.getBukkitEntity(), getMainArm() == HumanoidArm.LEFT ? MainHand.LEFT : MainHand.RIGHT);
             this.server.server.getPluginManager().callEvent(event);
         }
+        java.util.Locale adventure$locale = net.kyori.adventure.translation.Translator.parseLocale(packet.language); // CloudPlane - parsing was was moved up
+        this.connection.connection.channel.attr(PaperAdventure.LOCALE_ATTRIBUTE).set(adventure$locale); // CloudPlane - was moved up
         if (this.locale == null || !this.locale.equals(packet.language)) { // Paper - check for null
             PlayerLocaleChangeEvent event = new PlayerLocaleChangeEvent(this.getBukkitEntity(), packet.language);
             this.server.server.getPluginManager().callEvent(event);
             this.server.server.getPluginManager().callEvent(new com.destroystokyo.paper.event.player.PlayerLocaleChangeEvent(this.getBukkitEntity(), this.locale, packet.language)); // Paper
+
+            // CloudPlane start - update more data on locale change
+            // don't allow players to destroy the server by sending not that many packets
+            if (this.lastLocaleChange + 1000L < System.currentTimeMillis()) {
+                this.lastLocaleChange = System.currentTimeMillis();
+                this.advancements.refreshAll();
+                this.inventoryMenu.sendAllDataToRemote();
+                if (this.containerMenu != this.inventoryMenu) {
+                    this.containerMenu.sendAllDataToRemote();
+                }
+
+                for (Entity entity : this.serverLevel().getEntities().getAll()) {
+                    if (!entity.tracker.seenBy.contains(this.connection)) {
+                        continue;
+                    }
+
+                    if (entity.hasCustomName()) {
+                        entity.getEntityData().markDirty(Entity.DATA_CUSTOM_NAME);
+                    }
+                    if (entity instanceof net.minecraft.world.entity.Display.TextDisplay) {
+                        entity.getEntityData().markDirty(net.minecraft.world.entity.Display.TextDisplay.DATA_TEXT_ID);
+                    } else if (entity instanceof net.minecraft.world.entity.decoration.ItemFrame
+                            && !((net.minecraft.world.entity.decoration.ItemFrame) entity).getItem().isEmpty()) {
+                        entity.getEntityData().markDirty(net.minecraft.world.entity.decoration.ItemFrame.DATA_ITEM);
+                    }
+                }
+            }
+            // CloudPlane end
         }
         this.locale = packet.language;
         // Paper start
-        this.adventure$locale = net.kyori.adventure.translation.Translator.parseLocale(this.locale);
-        this.connection.connection.channel.attr(PaperAdventure.LOCALE_ATTRIBUTE).set(this.adventure$locale);
+        this.adventure$locale = adventure$locale; // CloudPlane - parsing moved up
+        // this.connection.connection.channel.attr(PaperAdventure.LOCALE_ATTRIBUTE).set(this.adventure$locale); // CloudPlane - moved up
         // Paper end
         this.clientViewDistance = packet.viewDistance;
         // CraftBukkit end
diff --git a/src/main/java/net/minecraft/world/entity/Display.java b/src/main/java/net/minecraft/world/entity/Display.java
index 2a5a4027e5d0d9d48a727834f3f5af65ea83aa23..ecef4ec4f67da8fdddd473733000b0002c65ff9f 100644
--- a/src/main/java/net/minecraft/world/entity/Display.java
+++ b/src/main/java/net/minecraft/world/entity/Display.java
@@ -593,7 +593,7 @@ public abstract class Display extends Entity {
         public static final byte FLAG_ALIGN_RIGHT = 16;
         private static final byte INITIAL_TEXT_OPACITY = -1;
         public static final int INITIAL_BACKGROUND = 1073741824;
-        private static final EntityDataAccessor<Component> DATA_TEXT_ID = SynchedEntityData.defineId(Display.TextDisplay.class, EntityDataSerializers.COMPONENT);
+        public static final EntityDataAccessor<Component> DATA_TEXT_ID = SynchedEntityData.defineId(Display.TextDisplay.class, EntityDataSerializers.COMPONENT); // CloudPlane - private -> public
         public static final EntityDataAccessor<Integer> DATA_LINE_WIDTH_ID = SynchedEntityData.defineId(Display.TextDisplay.class, EntityDataSerializers.INT);
         public static final EntityDataAccessor<Integer> DATA_BACKGROUND_COLOR_ID = SynchedEntityData.defineId(Display.TextDisplay.class, EntityDataSerializers.INT);
         private static final EntityDataAccessor<Byte> DATA_TEXT_OPACITY_ID = SynchedEntityData.defineId(Display.TextDisplay.class, EntityDataSerializers.BYTE);
diff --git a/src/main/java/net/minecraft/world/entity/Entity.java b/src/main/java/net/minecraft/world/entity/Entity.java
index e1aa3b24019eace573603647a5efbf01f316e4ee..e7dbb9f0c44a5b68274aca7210783ae2a39c541e 100644
--- a/src/main/java/net/minecraft/world/entity/Entity.java
+++ b/src/main/java/net/minecraft/world/entity/Entity.java
@@ -355,7 +355,7 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource {
     protected static final int FLAG_GLOWING = 6;
     protected static final int FLAG_FALL_FLYING = 7;
     private static final EntityDataAccessor<Integer> DATA_AIR_SUPPLY_ID = SynchedEntityData.defineId(Entity.class, EntityDataSerializers.INT);
-    private static final EntityDataAccessor<Optional<Component>> DATA_CUSTOM_NAME = SynchedEntityData.defineId(Entity.class, EntityDataSerializers.OPTIONAL_COMPONENT);
+    protected static final EntityDataAccessor<Optional<Component>> DATA_CUSTOM_NAME = SynchedEntityData.defineId(Entity.class, EntityDataSerializers.OPTIONAL_COMPONENT); // CloudPlane - private -> protected
     private static final EntityDataAccessor<Boolean> DATA_CUSTOM_NAME_VISIBLE = SynchedEntityData.defineId(Entity.class, EntityDataSerializers.BOOLEAN);
     private static final EntityDataAccessor<Boolean> DATA_SILENT = SynchedEntityData.defineId(Entity.class, EntityDataSerializers.BOOLEAN);
     private static final EntityDataAccessor<Boolean> DATA_NO_GRAVITY = SynchedEntityData.defineId(Entity.class, EntityDataSerializers.BOOLEAN);
