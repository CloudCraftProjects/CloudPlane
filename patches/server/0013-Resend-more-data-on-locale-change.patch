From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: booky10 <boooky10@gmail.com>
Date: Mon, 17 Jul 2023 20:11:44 +0200
Subject: [PATCH] Resend more data on locale change

Includes advancements, inventories, entity custom names, text display texts and item frame items

diff --git a/src/main/java/net/minecraft/server/PlayerAdvancements.java b/src/main/java/net/minecraft/server/PlayerAdvancements.java
index 24e5993b281448734eb67c7a8439a349bbf9fd72..1e3864d864dc2e10e3c19ea1aae6d0e32fdaab25 100644
--- a/src/main/java/net/minecraft/server/PlayerAdvancements.java
+++ b/src/main/java/net/minecraft/server/PlayerAdvancements.java
@@ -76,6 +76,16 @@ public class PlayerAdvancements {
         this.load(advancementLoader);
     }
 
+    // CloudPlane start
+    public void refreshAll() {
+        this.isFirstPacket = true;
+        for (AdvancementHolder advancement : this.visible) {
+            this.markForVisibilityUpdate(advancement);
+        }
+        this.visible.clear();
+    }
+    // CloudPlane end
+
     public void setPlayer(ServerPlayer owner) {
         this.player = owner;
     }
diff --git a/src/main/java/net/minecraft/server/level/ServerPlayer.java b/src/main/java/net/minecraft/server/level/ServerPlayer.java
index 881e893878a7d3b17ae272bbf25ff7dc53dc8c9a..1f06a468a54aa0068fbe1f4831133d58b325e00a 100644
--- a/src/main/java/net/minecraft/server/level/ServerPlayer.java
+++ b/src/main/java/net/minecraft/server/level/ServerPlayer.java
@@ -329,6 +329,10 @@ public class ServerPlayer extends Player {
     public double lastEntitySpawnRadiusSquared = -1.0;
     // Paper end - optimise chunk tick iteration
 
+    // CloudPlane start
+    private long lastLocaleChange = 0L;
+    // CloudPlane end
+
     public ServerPlayer(MinecraftServer server, ServerLevel world, GameProfile profile, ClientInformation clientOptions) {
         super(world, world.getSharedSpawnPos(), world.getSharedSpawnAngle(), profile);
         this.chatVisibility = ChatVisiblity.FULL;
@@ -2150,6 +2154,34 @@ public class ServerPlayer extends Player {
             PlayerLocaleChangeEvent event = new PlayerLocaleChangeEvent(this.getBukkitEntity(), clientOptions.language());
             this.server.server.getPluginManager().callEvent(event);
             this.server.server.getPluginManager().callEvent(new com.destroystokyo.paper.event.player.PlayerLocaleChangeEvent(this.getBukkitEntity(), this.language, clientOptions.language())); // Paper
+
+            // CloudPlane start - update more data on locale change
+            //   don't allow players to crash the server with only a few packets
+            if (this.lastLocaleChange + 1000L < System.currentTimeMillis()) {
+                this.lastLocaleChange = System.currentTimeMillis();
+                this.advancements.refreshAll();
+                this.inventoryMenu.sendAllDataToRemote();
+                if (this.containerMenu != this.inventoryMenu) {
+                    this.containerMenu.sendAllDataToRemote();
+                }
+
+                for (Entity entity : this.serverLevel().getEntities().getAll()) {
+                    if (!entity.tracker.seenBy.contains(this.connection)) {
+                        continue;
+                    }
+
+                    if (entity.hasCustomName()) {
+                        entity.getEntityData().markDirty(Entity.DATA_CUSTOM_NAME);
+                    }
+                    if (entity instanceof net.minecraft.world.entity.Display.TextDisplay) {
+                        entity.getEntityData().markDirty(net.minecraft.world.entity.Display.TextDisplay.DATA_TEXT_ID);
+                    } else if (entity instanceof net.minecraft.world.entity.decoration.ItemFrame
+                            && !((net.minecraft.world.entity.decoration.ItemFrame) entity).getItem().isEmpty()) {
+                        entity.getEntityData().markDirty(net.minecraft.world.entity.decoration.ItemFrame.DATA_ITEM);
+                    }
+                }
+            }
+            // CloudPlane end - update more data on locale change
         }
         // CraftBukkit end
         // Paper start - don't call options events on login
diff --git a/src/main/java/net/minecraft/world/entity/Display.java b/src/main/java/net/minecraft/world/entity/Display.java
index 2ecd3ed5b36475125c6f63af2612011fc8fba8a5..1cb2532bad5b30366a743000318bcbafb23e9e87 100644
--- a/src/main/java/net/minecraft/world/entity/Display.java
+++ b/src/main/java/net/minecraft/world/entity/Display.java
@@ -768,7 +768,7 @@ public abstract class Display extends Entity {
         public static final byte FLAG_ALIGN_RIGHT = 16;
         private static final byte INITIAL_TEXT_OPACITY = -1;
         public static final int INITIAL_BACKGROUND = 1073741824;
-        private static final EntityDataAccessor<Component> DATA_TEXT_ID = SynchedEntityData.defineId(Display.TextDisplay.class, EntityDataSerializers.COMPONENT);
+        public static final EntityDataAccessor<Component> DATA_TEXT_ID = SynchedEntityData.defineId(Display.TextDisplay.class, EntityDataSerializers.COMPONENT); // CloudPlane - private -> public
         public static final EntityDataAccessor<Integer> DATA_LINE_WIDTH_ID = SynchedEntityData.defineId(Display.TextDisplay.class, EntityDataSerializers.INT);
         public static final EntityDataAccessor<Integer> DATA_BACKGROUND_COLOR_ID = SynchedEntityData.defineId(Display.TextDisplay.class, EntityDataSerializers.INT);
         private static final EntityDataAccessor<Byte> DATA_TEXT_OPACITY_ID = SynchedEntityData.defineId(Display.TextDisplay.class, EntityDataSerializers.BYTE);
diff --git a/src/main/java/net/minecraft/world/entity/Entity.java b/src/main/java/net/minecraft/world/entity/Entity.java
index 734e792451d878aba40f287bd21203a176366b01..8487cfe34a72d1750f0abc4a76f859d3fcb9a49d 100644
--- a/src/main/java/net/minecraft/world/entity/Entity.java
+++ b/src/main/java/net/minecraft/world/entity/Entity.java
@@ -357,7 +357,7 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource, S
     protected static final int FLAG_GLOWING = 6;
     protected static final int FLAG_FALL_FLYING = 7;
     private static final EntityDataAccessor<Integer> DATA_AIR_SUPPLY_ID = SynchedEntityData.defineId(Entity.class, EntityDataSerializers.INT);
-    private static final EntityDataAccessor<Optional<Component>> DATA_CUSTOM_NAME = SynchedEntityData.defineId(Entity.class, EntityDataSerializers.OPTIONAL_COMPONENT);
+    protected static final EntityDataAccessor<Optional<Component>> DATA_CUSTOM_NAME = SynchedEntityData.defineId(Entity.class, EntityDataSerializers.OPTIONAL_COMPONENT); // CloudPlane - private -> protected
     private static final EntityDataAccessor<Boolean> DATA_CUSTOM_NAME_VISIBLE = SynchedEntityData.defineId(Entity.class, EntityDataSerializers.BOOLEAN);
     private static final EntityDataAccessor<Boolean> DATA_SILENT = SynchedEntityData.defineId(Entity.class, EntityDataSerializers.BOOLEAN);
     private static final EntityDataAccessor<Boolean> DATA_NO_GRAVITY = SynchedEntityData.defineId(Entity.class, EntityDataSerializers.BOOLEAN);
