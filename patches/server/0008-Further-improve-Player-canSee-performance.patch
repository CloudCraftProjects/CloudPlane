From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: booky10 <boooky10@gmail.com>
Date: Fri, 20 Sep 2024 01:13:04 +0200
Subject: [PATCH] Further improve Player#canSee performance


diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
index 01276d78447d4b52afcdfb7fc8acd07b4a809986..25ad600630cf50fd2e01e2e9b8f636d5ee73dd8d 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
@@ -210,6 +210,7 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
     private boolean hasPlayedBefore = false;
     private final ConversationTracker conversationTracker = new ConversationTracker();
     private final Set<String> channels = new HashSet<String>();
+    private final it.unimi.dsi.fastutil.longs.LongSet invertedVisibilityEntitySet = new it.unimi.dsi.fastutil.longs.LongOpenHashSet(); // CloudPlane - further improve Player#canSee performance
     private final Map<UUID, Set<WeakReference<Plugin>>> invertedVisibilityEntities = new HashMap<>();
     private final Set<UUID> unlistedEntities = new HashSet<>(); // Paper - Add Listing API for Player
     private static final WeakHashMap<Plugin, WeakReference<Plugin>> pluginWeakReferences = new WeakHashMap<>();
@@ -2056,6 +2057,7 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
         invertedPlugins = new HashSet<>();
         invertedPlugins.add(CraftPlayer.getPluginWeakReference(plugin));
         this.invertedVisibilityEntities.put(entity.getUniqueId(), invertedPlugins);
+        this.invertedVisibilityEntitySet.add(((CraftEntity) entity).getHandle().getLongUUID()); // CloudPlane - further improve Player#canSee performance
 
         return true;
     }
@@ -2094,6 +2096,7 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
         if (this.invertedVisibilityEntities.remove(entity.getUniqueId()) == null) {
             this.untrackAndHideEntity(entity);
         }
+        else this.invertedVisibilityEntitySet.remove(((CraftEntity) entity).getHandle().getLongUUID()); // CloudPlane - further improve Player#canSee performance
     }
 
     @Override
@@ -2142,6 +2145,7 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
             return false; // Some other plugins still want the entity inverted
         }
         this.invertedVisibilityEntities.remove(entity.getUniqueId());
+        this.invertedVisibilityEntitySet.remove(((CraftEntity) entity).getHandle().getLongUUID()); // CloudPlane - further improve Player#canSee performance
 
         return true;
     }
@@ -2218,6 +2222,7 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
         if (this.invertedVisibilityEntities.remove(entity.getUniqueId()) == null) {
             this.trackAndShowEntity(entity);
         }
+        else this.invertedVisibilityEntitySet.remove(((CraftEntity) entity).getHandle().getLongUUID()); // CloudPlane - further improve Player#canSee performance
     }
     // Paper start
     public com.destroystokyo.paper.profile.PlayerProfile getPlayerProfile() {
@@ -2250,6 +2255,7 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
 
     public void onEntityRemove(Entity entity) {
         this.invertedVisibilityEntities.remove(entity.getUUID());
+        this.invertedVisibilityEntitySet.remove(entity.getLongUUID()); // CloudPlane - further improve Player#canSee performance
     }
 
     @Override
@@ -2265,7 +2271,7 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
 
     public boolean canSee(Entity entity) {
         return this.entity == entity // SPIGOT-7312: Can always see self
-                || entity.visibleByDefault != this.invertedVisibilityEntities.containsKey(entity.getUUID());
+                || entity.visibleByDefault != this.invertedVisibilityEntitySet.contains(entity.longUUID); // CloudPlane - further improve Player#canSee performance
         // CloudPlane end - improve Player#canSee performance
     }
 
