From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: booky10 <boooky10@gmail.com>
Date: Sun, 27 Jun 2021 20:30:37 +0200
Subject: [PATCH] Add CloudPlane configuration


diff --git a/net/minecraft/server/dedicated/DedicatedServer.java b/net/minecraft/server/dedicated/DedicatedServer.java
index e28ba8b443f70b346a7748dc20a7e147a00bdcdb..ebbc48fe1934740ba6690982cda64cb4225ecc82 100644
--- a/net/minecraft/server/dedicated/DedicatedServer.java
+++ b/net/minecraft/server/dedicated/DedicatedServer.java
@@ -186,6 +186,7 @@ public class DedicatedServer extends MinecraftServer implements ServerInterface
         com.destroystokyo.paper.VersionHistoryManager.INSTANCE.getClass(); // Paper - load version history now
         gg.pufferfish.pufferfish.PufferfishConfig.load(); // Pufferfish
         gg.pufferfish.pufferfish.PufferfishCommand.init(); // Pufferfish
+        dev.booky.cloudplane.CloudPlaneConfig.init((java.io.File) this.options.valueOf("cloudplane-settings")); // CloudPlane - config
 
         this.setPvpAllowed(properties.pvp);
         this.setFlightAllowed(properties.allowFlight);
diff --git a/net/minecraft/world/level/Level.java b/net/minecraft/world/level/Level.java
index 8eb11074c3ddcc7ca55e382459bc4a2ac02caff5..0bcb7b78279c561b55cf2d625abecdf5ced3d4bf 100644
--- a/net/minecraft/world/level/Level.java
+++ b/net/minecraft/world/level/Level.java
@@ -813,6 +813,8 @@ public abstract class Level implements LevelAccessor, UUIDLookup<Entity>, AutoCl
     }
     // Paper end - optimise random ticking
 
+    public final dev.booky.cloudplane.CloudPlaneWorldConfig cloudplaneConfig; // CloudPlane - config
+
     protected Level(
         WritableLevelData levelData,
         ResourceKey<Level> dimension,
@@ -840,6 +842,7 @@ public abstract class Level implements LevelAccessor, UUIDLookup<Entity>, AutoCl
         // Paper end - getblock optimisations - cache world height/sections
         this.spigotConfig = new org.spigotmc.SpigotWorldConfig(((net.minecraft.world.level.storage.PrimaryLevelData) levelData).getLevelName()); // Spigot
         this.paperConfig = paperWorldConfigCreator.apply(this.spigotConfig); // Paper - create paper world config
+        this.cloudplaneConfig = new dev.booky.cloudplane.CloudPlaneWorldConfig((((net.minecraft.world.level.storage.PrimaryLevelData) levelData).getLevelName()), environment); // CloudPlane - config
         this.generator = generator;
         this.world = new CraftWorld((ServerLevel) this, generator, biomeProvider, environment);
 
