From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: booky10 <boooky10@gmail.com>
Date: Sat, 31 Aug 2024 18:57:57 +0200
Subject: [PATCH] Fix elastic leash behaviour on unleash cancel


diff --git a/net/minecraft/world/entity/Leashable.java b/net/minecraft/world/entity/Leashable.java
index eab109f5256bf829dd43174699e79e9a2c6326c0..0d017113811411acfb105c2bc05b25fa04db74b7 100644
--- a/net/minecraft/world/entity/Leashable.java
+++ b/net/minecraft/world/entity/Leashable.java
@@ -171,9 +171,8 @@ public interface Leashable {
             if (leashHolder != null && leashHolder.level() == entity.level()) {
                 double d = entity.leashDistanceTo(leashHolder);
                 entity.whenLeashedTo(leashHolder);
-                if (d > entity.leashSnapDistanceOrConfig()) { // Paper - Configurable max leash distance
+                if (d > entity.leashSnapDistanceOrConfig() && entity.leashTooFarBehaviour0()) { // Paper - Configurable max leash distance // CloudPlane - fix elastic leash behavior on event cancel
                     level.playSound(null, leashHolder.getX(), leashHolder.getY(), leashHolder.getZ(), SoundEvents.LEAD_BREAK, SoundSource.NEUTRAL, 1.0F, 1.0F);
-                    entity.leashTooFarBehaviour();
                 } else if (d > entity.leashElasticDistance() - leashHolder.getBbWidth() - entity.getBbWidth()
                     && entity.checkElasticInteractions(leashHolder, leashData)) {
                     entity.onElasticLeashPull();
@@ -218,13 +217,21 @@ public interface Leashable {
         entity.notifyLeashHolder(this);
     }
 
+    // CloudPlane start - fix elastic leash behaviour on unleash cancel
+    @io.papermc.paper.annotation.DoNotUse
+    @Deprecated
     default void leashTooFarBehaviour() {
+        this.leashTooFarBehaviour0();
+    }
+
+    default boolean leashTooFarBehaviour0() {
+        // CloudPlane end - fix elastic leash behaviour on unleash cancel
         // CraftBukkit start
         boolean dropLeash = true; // Paper
         if (this instanceof Entity entity) {
             // Paper start - Expand EntityUnleashEvent
             final org.bukkit.event.entity.EntityUnleashEvent event = new org.bukkit.event.entity.EntityUnleashEvent(entity.getBukkitEntity(), org.bukkit.event.entity.EntityUnleashEvent.UnleashReason.DISTANCE, true);
-            if (!event.callEvent()) return;
+            if (!event.callEvent()) return false; // CloudPlane - fix elastic leash behaviour on unleash cancel
             dropLeash = event.isDropLeash();
         }
         // CraftBukkit end
@@ -234,6 +241,7 @@ public interface Leashable {
             this.removeLeash();
         }
         // Paper end - Expand EntityUnleashEvent
+        return true; // CloudPlane - fix elastic leash behaviour on unleash cancel
     }
 
     default void closeRangeLeashBehaviour(Entity entity) {
diff --git a/net/minecraft/world/entity/Mob.java b/net/minecraft/world/entity/Mob.java
index 96cc7d1fcb8627484a16e6930ff1221f55251e2a..04968d5e5c4d039a5035465a5f016037500bed59 100644
--- a/net/minecraft/world/entity/Mob.java
+++ b/net/minecraft/world/entity/Mob.java
@@ -1423,10 +1423,14 @@ public abstract class Mob extends LivingEntity implements EquipmentUser, Leashab
         }
     }
 
+    // CloudPlane start - fix elastic leash behaviour on unleash cancel
     @Override
-    public void leashTooFarBehaviour() {
-        Leashable.super.leashTooFarBehaviour();
+    public boolean leashTooFarBehaviour0() {
+        boolean ret = Leashable.super.leashTooFarBehaviour0();
+        if (ret)
         this.goalSelector.disableControlFlag(Goal.Flag.MOVE);
+        return ret;
+        // CloudPlane end - fix elastic leash behaviour on unleash cancel
     }
 
     @Override
