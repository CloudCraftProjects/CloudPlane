From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: booky10 <boooky10@gmail.com>
Date: Sun, 5 Jan 2025 20:48:30 +0100
Subject: [PATCH] Convert spawn category limits and ticks to array


diff --git a/net/minecraft/server/level/ServerChunkCache.java b/net/minecraft/server/level/ServerChunkCache.java
index ac4c4c31cd56fd51e25084f0fb854f1077d1bca7..846247f982f3029261c6fdc5394459fa2ff9c56f 100644
--- a/net/minecraft/server/level/ServerChunkCache.java
+++ b/net/minecraft/server/level/ServerChunkCache.java
@@ -586,7 +586,10 @@ public class ServerChunkCache extends ChunkSource implements ca.spottedleaf.moon
                 entityPlayer.playerNaturallySpawnedEvent.callEvent();
             }
             // Paper end - PlayerNaturallySpawnCreaturesEvent
-            boolean flag = this.level.ticksPerSpawnCategory.getLong(org.bukkit.entity.SpawnCategory.ANIMAL) != 0L && this.level.getLevelData().getGameTime() % this.level.ticksPerSpawnCategory.getLong(org.bukkit.entity.SpawnCategory.ANIMAL) == 0L; // CraftBukkit
+            // CloudPlane start - convert spawn category ticks to array
+            final long ticks = this.level.ticksPerSpawnCategory[org.bukkit.entity.SpawnCategory.ANIMAL.ordinal()];
+            boolean flag = ticks != 0L && this.level.getLevelData().getGameTime() % ticks == 0L; // CraftBukkit
+            // CloudPlane end - convert spawn category ticks to array
             filteredSpawningCategories = NaturalSpawner.getFilteredSpawningCategories(spawnState, this.spawnFriendlies, this.spawnEnemies, flag, this.level); // CraftBukkit
         } else {
             filteredSpawningCategories = List.of();
diff --git a/net/minecraft/world/level/Level.java b/net/minecraft/world/level/Level.java
index 0bcb7b78279c561b55cf2d625abecdf5ced3d4bf..f56c35b01bc85931310ff12c45b0dccedeca4341 100644
--- a/net/minecraft/world/level/Level.java
+++ b/net/minecraft/world/level/Level.java
@@ -144,7 +144,7 @@ public abstract class Level implements LevelAccessor, UUIDLookup<Entity>, AutoCl
     public Map<BlockPos, BlockEntity> capturedTileEntities = new java.util.LinkedHashMap<>(); // Paper - Retain block place order when capturing blockstates
     @Nullable
     public List<net.minecraft.world.entity.item.ItemEntity> captureDrops;
-    public final it.unimi.dsi.fastutil.objects.Object2LongOpenHashMap<SpawnCategory> ticksPerSpawnCategory = new it.unimi.dsi.fastutil.objects.Object2LongOpenHashMap<>();
+    public final long[] ticksPerSpawnCategory = new long[SpawnCategory.values().length]; // CloudPlane - convert spawn category ticks to array
     // Paper start - EAR 2
     public int wakeupInactiveRemainingAnimals;
     public int wakeupInactiveRemainingFlying;
@@ -848,7 +848,7 @@ public abstract class Level implements LevelAccessor, UUIDLookup<Entity>, AutoCl
 
         for (SpawnCategory spawnCategory : SpawnCategory.values()) {
             if (org.bukkit.craftbukkit.util.CraftSpawnCategory.isValidForLimits(spawnCategory)) {
-                this.ticksPerSpawnCategory.put(spawnCategory, this.getTicksPerSpawn(spawnCategory));
+                this.ticksPerSpawnCategory[spawnCategory.ordinal()] = this.getTicksPerSpawn(spawnCategory); // CloudPlane - convert spawn category ticks to array
             }
         }
         // CraftBukkit end
diff --git a/net/minecraft/world/level/NaturalSpawner.java b/net/minecraft/world/level/NaturalSpawner.java
index f5821c32f92bdd5bc682e27bd06ce9fedbcb32ee..8b3205ae7373399920ef95f0b36683d415d4171f 100644
--- a/net/minecraft/world/level/NaturalSpawner.java
+++ b/net/minecraft/world/level/NaturalSpawner.java
@@ -131,8 +131,11 @@ public final class NaturalSpawner {
             int limit = mobCategory.getMaxInstancesPerChunk();
             org.bukkit.entity.SpawnCategory spawnCategory = org.bukkit.craftbukkit.util.CraftSpawnCategory.toBukkit(mobCategory);
             if (org.bukkit.craftbukkit.util.CraftSpawnCategory.isValidForLimits(spawnCategory)) {
-                spawnThisTick = level.ticksPerSpawnCategory.getLong(spawnCategory) != 0 && worlddata.getGameTime() % level.ticksPerSpawnCategory.getLong(spawnCategory) == 0;
-                limit = level.getWorld().getSpawnLimit(spawnCategory);
+                // CloudPlane start - convert spawn category ticks to array
+                final long ticks = level.ticksPerSpawnCategory[spawnCategory.ordinal()];
+                spawnThisTick = ticks != 0 && worlddata.getGameTime() % ticks == 0;
+                // CloudPlane end - convert spawn category ticks to array
+                limit = level.getWorld().getSpawnLimitUnsafe(spawnCategory); // CloudPlane - convert spawn category limits to array; use internal getter
             }
 
             if (!spawnThisTick || limit == 0) {
@@ -164,7 +167,7 @@ public final class NaturalSpawner {
                 int limit = mobCategory.getMaxInstancesPerChunk();
                 org.bukkit.entity.SpawnCategory spawnCategory = org.bukkit.craftbukkit.util.CraftSpawnCategory.toBukkit(mobCategory);
                 if (org.bukkit.craftbukkit.util.CraftSpawnCategory.isValidForLimits(spawnCategory)) {
-                    limit = level.getWorld().getSpawnLimit(spawnCategory);
+                    limit = level.getWorld().getSpawnLimitUnsafe(spawnCategory); // CloudPlane - convert spawn category limits to array; use internal getter
                 }
 
                 // Apply per-player limit
