From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: booky10 <boooky10@gmail.com>
Date: Fri, 20 Sep 2024 00:56:09 +0200
Subject: [PATCH] Work around unnecessary chunk pos conversion on entity
 tracker visibility check


diff --git a/ca/spottedleaf/moonrise/patches/chunk_system/player/RegionizedPlayerChunkLoader.java b/ca/spottedleaf/moonrise/patches/chunk_system/player/RegionizedPlayerChunkLoader.java
index bdc1200ef5317fdaf58973bf580b0a672aee800f..4986f12ceda5c813de023bd89c8716ac4534262b 100644
--- a/ca/spottedleaf/moonrise/patches/chunk_system/player/RegionizedPlayerChunkLoader.java
+++ b/ca/spottedleaf/moonrise/patches/chunk_system/player/RegionizedPlayerChunkLoader.java
@@ -273,18 +273,26 @@ public final class RegionizedPlayerChunkLoader {
         return sendViewDistance;
     }
 
+    // CloudPlane start - work around unnecessary chunk pos conversion
+    @Deprecated
+    @io.papermc.paper.annotation.DoNotUse
     public boolean isChunkSent(final ServerPlayer player, final int chunkX, final int chunkZ, final boolean borderOnly) {
         return borderOnly ? this.isChunkSentBorderOnly(player, chunkX, chunkZ) : this.isChunkSent(player, chunkX, chunkZ);
     }
 
     public boolean isChunkSent(final ServerPlayer player, final int chunkX, final int chunkZ) {
+        return this.isChunkSent(player, CoordinateUtils.getChunkKey(chunkX, chunkZ));
+    }
+
+    public boolean isChunkSent(final ServerPlayer player, final long chunkKey) {
         final PlayerChunkLoaderData loader = ((ChunkSystemServerPlayer)player).moonrise$getChunkLoader();
         if (loader == null) {
             return false;
         }
 
-        return loader.sentChunks.contains(CoordinateUtils.getChunkKey(chunkX, chunkZ));
+        return loader.sentChunks.contains(chunkKey);
     }
+    // CloudPlane end - work around unnecessary chunk pos conversion
 
     public boolean isChunkSentBorderOnly(final ServerPlayer player, final int chunkX, final int chunkZ) {
         final PlayerChunkLoaderData loader = ((ChunkSystemServerPlayer)player).moonrise$getChunkLoader();
diff --git a/net/minecraft/server/level/ChunkHolder.java b/net/minecraft/server/level/ChunkHolder.java
index 656041c9539b6834b4d37b353eb6b810a7763ff4..a7b757b2a8be47d0ec5e0abde9193f66f0648a25 100644
--- a/net/minecraft/server/level/ChunkHolder.java
+++ b/net/minecraft/server/level/ChunkHolder.java
@@ -93,7 +93,7 @@ public class ChunkHolder extends GenerationChunkHolder implements ca.spottedleaf
         final ServerPlayer[] raw = this.playersSentChunkTo.getRawDataUnchecked();
         for (int i = 0, len = this.playersSentChunkTo.size(); i < len; ++i) {
             final ServerPlayer player = raw[i];
-            if (onlyOnWatchDistanceEdge && !((ca.spottedleaf.moonrise.patches.chunk_system.level.ChunkSystemServerLevel)this.getChunkMap().level).moonrise$getPlayerChunkLoader().isChunkSent(player, this.pos.x, this.pos.z, onlyOnWatchDistanceEdge)) {
+            if (onlyOnWatchDistanceEdge && !((ca.spottedleaf.moonrise.patches.chunk_system.level.ChunkSystemServerLevel)this.getChunkMap().level).moonrise$getPlayerChunkLoader().isChunkSentBorderOnly(player, this.pos.x, this.pos.z)) { // CloudPlane - work around unnecessary chunk pos conversion
                 continue;
             }
             ret.add(player);
diff --git a/net/minecraft/server/level/ChunkMap.java b/net/minecraft/server/level/ChunkMap.java
index eb352aa4296abc3ed4cf31c590bc0be66daf4de3..fd2bbe60e523666ba75809f0a0d84806a696ab3b 100644
--- a/net/minecraft/server/level/ChunkMap.java
+++ b/net/minecraft/server/level/ChunkMap.java
@@ -301,7 +301,7 @@ public class ChunkMap extends ChunkStorage implements ChunkHolder.PlayerProvider
     }
 
     private boolean isChunkOnTrackedBorder(ServerPlayer player, int x, int z) {
-        return ((ca.spottedleaf.moonrise.patches.chunk_system.level.ChunkSystemServerLevel)this.level).moonrise$getPlayerChunkLoader().isChunkSent(player, x, z, true); // Paper - rewrite chunk system
+        return ((ca.spottedleaf.moonrise.patches.chunk_system.level.ChunkSystemServerLevel)this.level).moonrise$getPlayerChunkLoader().isChunkSentBorderOnly(player, x, z); // Paper - rewrite chunk system // CloudPlane - work around unnecessary chunk pos conversion
     }
 
     protected ThreadedLevelLightEngine getLightEngine() {
