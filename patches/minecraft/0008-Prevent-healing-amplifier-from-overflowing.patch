From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: booky10 <boooky10@gmail.com>
Date: Tue, 5 Apr 2022 17:05:14 +0200
Subject: [PATCH] Prevent healing amplifier from overflowing


diff --git a/net/minecraft/world/effect/HealOrHarmMobEffect.java b/net/minecraft/world/effect/HealOrHarmMobEffect.java
index 9c564abfaefe7ead9abde4338a6722d5d703f9e2..c8cd411e365eb802d9a214ca2cf2d97787afa83e 100644
--- a/net/minecraft/world/effect/HealOrHarmMobEffect.java
+++ b/net/minecraft/world/effect/HealOrHarmMobEffect.java
@@ -18,7 +18,7 @@ class HealOrHarmMobEffect extends InstantenousMobEffect {
         if (this.isHarm == entity.isInvertedHealAndHarm()) {
             entity.heal(Math.max(4 << amplifier, 0), org.bukkit.event.entity.EntityRegainHealthEvent.RegainReason.MAGIC); // CraftBukkit
         } else {
-            entity.hurtServer(level, entity.damageSources().magic(), 6 << amplifier);
+            entity.hurtServer(level, entity.damageSources().magic(), Math.max(6 << amplifier, 0)); // CloudPlane - prevent negative healing/harming
         }
 
         return true;
@@ -31,13 +31,13 @@ class HealOrHarmMobEffect extends InstantenousMobEffect {
         if (!new io.papermc.paper.event.entity.EntityEffectTickEvent(entity.getBukkitLivingEntity(), org.bukkit.craftbukkit.potion.CraftPotionEffectType.minecraftToBukkit(this), amplifier).callEvent()) { return; } // Paper - Add EntityEffectTickEvent
         if (this.isHarm == entity.isInvertedHealAndHarm()) {
             int i = (int)(health * (4 << amplifier) + 0.5);
-            entity.heal(i, org.bukkit.event.entity.EntityRegainHealthEvent.RegainReason.MAGIC); // CraftBukkit
+            entity.heal(Math.max(i, 0), org.bukkit.event.entity.EntityRegainHealthEvent.RegainReason.MAGIC); // CraftBukkit // CloudPlane - prevent negative healing/harming
         } else {
             int i = (int)(health * (6 << amplifier) + 0.5);
             if (source == null) {
-                entity.hurtServer(level, entity.damageSources().magic(), i);
+                entity.hurtServer(level, entity.damageSources().magic(), Math.max(i, 0)); // CloudPlane - prevent negative healing/harming
             } else {
-                entity.hurtServer(level, entity.damageSources().indirectMagic(source, indirectSource), i);
+                entity.hurtServer(level, entity.damageSources().indirectMagic(source, indirectSource), Math.max(i, 0)); // CloudPlane - prevent negative healing/harming
             }
         }
     }
