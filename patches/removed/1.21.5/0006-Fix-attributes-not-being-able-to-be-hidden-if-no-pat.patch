From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: booky10 <boooky10@gmail.com>
Date: Tue, 13 Aug 2024 05:11:35 +0200
Subject: [PATCH] Fix attributes not being able to be hidden if no patch got
 built

This now re-applies the prototype attributes (if present) to actually make the tag work

diff --git a/src/main/java/org/bukkit/craftbukkit/inventory/CraftItemStack.java b/src/main/java/org/bukkit/craftbukkit/inventory/CraftItemStack.java
index d3dc1f7fe238ca0229b7c05ed04be481e4613ef8..9361f850ca5e9e81ffa71114d80aba6267cd39be 100644
--- a/src/main/java/org/bukkit/craftbukkit/inventory/CraftItemStack.java
+++ b/src/main/java/org/bukkit/craftbukkit/inventory/CraftItemStack.java
@@ -410,6 +410,7 @@ public final class CraftItemStack extends ItemStack {
                 itemStack.set(DataComponents.PROFILE, profile);
             }
         };
+        tag.base = itemStack.components.prototype; // CloudPlane - add base components
         // Paper end - support updating profile after resolving it
         ((CraftMetaItem) itemMeta).applyToItem(tag);
         itemStack.applyComponents(tag.build());
@@ -467,6 +468,7 @@ public final class CraftItemStack extends ItemStack {
             };
             // Paper end - support updating profile after resolving it
 
+            tag.base = item.components.prototype; // CloudPlane - add base components
             ((CraftMetaItem) itemMeta).applyToItem(tag);
             item.restorePatch(DataComponentPatch.EMPTY); // Paper - properly apply the new patch from itemmeta
             item.applyComponents(tag.build()); // Paper - properly apply the new patch from itemmeta
diff --git a/src/main/java/org/bukkit/craftbukkit/inventory/CraftMetaBlockState.java b/src/main/java/org/bukkit/craftbukkit/inventory/CraftMetaBlockState.java
index d688339a57f0b4f12588ced0f7860a0d77eae728..32e514f568abf5e8ef9f960fa74ee73ba6542381 100644
--- a/src/main/java/org/bukkit/craftbukkit/inventory/CraftMetaBlockState.java
+++ b/src/main/java/org/bukkit/craftbukkit/inventory/CraftMetaBlockState.java
@@ -304,6 +304,7 @@ public class CraftMetaBlockState extends CraftMetaItem implements BlockStateMeta
         final PatchedDataComponentMap patchedMap = new PatchedDataComponentMap(nmsBlockState.getBlock().asItem().components());
         patchedMap.setAll(this.components);
         final Applicator applicator = new Applicator() {};
+        applicator.base = nmsBlockState.getBlock().asItem().components(); // CloudPlane - add base components
         super.applyToItem(applicator);
         patchedMap.applyPatch(applicator.build());
         blockEntity.applyComponents(nmsBlockState.getBlock().asItem().components(), patchedMap.asPatch());
diff --git a/src/main/java/org/bukkit/craftbukkit/inventory/CraftMetaItem.java b/src/main/java/org/bukkit/craftbukkit/inventory/CraftMetaItem.java
index 7d85c554e4e5df49d4965dbed9c112b86cd70727..168a1de02cb994d577b51e44efd7a33be3ab2a93 100644
--- a/src/main/java/org/bukkit/craftbukkit/inventory/CraftMetaItem.java
+++ b/src/main/java/org/bukkit/craftbukkit/inventory/CraftMetaItem.java
@@ -203,6 +203,8 @@ class CraftMetaItem implements ItemMeta, Damageable, Repairable, BlockDataMeta {
 
     static abstract class Applicator { // Paper - support updating profile after resolving it
 
+        net.minecraft.core.component.DataComponentMap base; // CloudPlane - add base components
+
         final DataComponentPatch.Builder builder = DataComponentPatch.builder(); // Paper - private -> package-private
         void skullCallback(net.minecraft.world.item.component.ResolvableProfile resolvableProfile) {} // Paper - support updating profile after resolving it
 
@@ -1118,6 +1120,13 @@ class CraftMetaItem implements ItemMeta, Damageable, Repairable, BlockDataMeta {
     void applyModifiers(Multimap<Attribute, AttributeModifier> modifiers, CraftMetaItem.Applicator tag) {
         if (modifiers == null/* || modifiers.isEmpty()*/) { // Paper - empty modifiers has a specific meaning, they should still be saved
             // Paper - don't save ItemFlag if the underlying data isn't present
+            // CloudPlane start - ignore above comment and just do it
+            if (this.hasItemFlag(ItemFlag.HIDE_ATTRIBUTES)) {
+                List<ItemAttributeModifiers.Entry> entries = tag.base == null ? List.of() :
+                        tag.base.getOrDefault(DataComponents.ATTRIBUTE_MODIFIERS, ItemAttributeModifiers.EMPTY).modifiers();
+                tag.put(CraftMetaItem.ATTRIBUTES, new ItemAttributeModifiers(entries, false));
+            }
+            // CloudPlane end - ignore above comment and just do it
             return;
         }
 
