From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: booky10 <boooky10@gmail.com>
Date: Mon, 17 Jul 2023 20:11:44 +0200
Subject: [PATCH] Resend more data on locale change

Includes advancements, inventories, entity custom names, text display texts and item frame items

diff --git a/src/main/java/net/minecraft/server/PlayerAdvancements.java b/src/main/java/net/minecraft/server/PlayerAdvancements.java
index 862a4bf003b7f810fb57dbcd150a1417c902b633..6ebbf6ebb3fc27bc54bad7ffac926aff7e855891 100644
--- a/src/main/java/net/minecraft/server/PlayerAdvancements.java
+++ b/src/main/java/net/minecraft/server/PlayerAdvancements.java
@@ -76,6 +76,16 @@ public class PlayerAdvancements {
         this.load(advancementLoader);
     }
 
+    // CloudPlane start
+    public void refreshAll() {
+        this.isFirstPacket = true;
+        for (AdvancementHolder advancement : this.visible) {
+            this.markForVisibilityUpdate(advancement);
+        }
+        this.visible.clear();
+    }
+    // CloudPlane end
+
     public void setPlayer(ServerPlayer owner) {
         this.player = owner;
     }
diff --git a/src/main/java/net/minecraft/server/level/ServerPlayer.java b/src/main/java/net/minecraft/server/level/ServerPlayer.java
index 508045b063f267245256331d86daa64d44da761e..d52458a2238e27be3a95c985ba8466ad9735e3a6 100644
--- a/src/main/java/net/minecraft/server/level/ServerPlayer.java
+++ b/src/main/java/net/minecraft/server/level/ServerPlayer.java
@@ -333,6 +333,10 @@ public class ServerPlayer extends net.minecraft.world.entity.player.Player imple
     }
     // Paper end - rewrite chunk system
 
+    // CloudPlane start
+    private long lastLocaleChange = 0L;
+    // CloudPlane end
+
     public ServerPlayer(MinecraftServer server, ServerLevel world, GameProfile profile, ClientInformation clientOptions) {
         super(world, world.getSharedSpawnPos(), world.getSharedSpawnAngle(), profile);
         this.chatVisibility = ChatVisiblity.FULL;
@@ -2287,6 +2291,34 @@ public class ServerPlayer extends net.minecraft.world.entity.player.Player imple
         if (this.language == null || !this.language.equals(clientOptions.language())) { // Paper
             PlayerLocaleChangeEvent event = new PlayerLocaleChangeEvent(this.getBukkitEntity(), clientOptions.language());
             this.server.server.getPluginManager().callEvent(event);
+
+            // CloudPlane start - update more data on locale change
+            //   don't allow players to crash the server with only a few packets
+            if (this.lastLocaleChange + 1000L < System.currentTimeMillis()) {
+                this.lastLocaleChange = System.currentTimeMillis();
+                this.advancements.refreshAll();
+                this.inventoryMenu.sendAllDataToRemote();
+                if (this.containerMenu != this.inventoryMenu) {
+                    this.containerMenu.sendAllDataToRemote();
+                }
+
+                for (Entity entity : this.serverLevel().getEntities().getAll()) {
+                    if (!entity.moonrise$getTrackedEntity().seenBy.contains(this.connection)) {
+                        continue;
+                    }
+
+                    if (entity.hasCustomName()) {
+                        entity.getEntityData().markDirty(Entity.DATA_CUSTOM_NAME);
+                    }
+                    if (entity instanceof net.minecraft.world.entity.Display.TextDisplay) {
+                        entity.getEntityData().markDirty(net.minecraft.world.entity.Display.TextDisplay.DATA_TEXT_ID);
+                    } else if (entity instanceof net.minecraft.world.entity.decoration.ItemFrame
+                            && !((net.minecraft.world.entity.decoration.ItemFrame) entity).getItem().isEmpty()) {
+                        entity.getEntityData().markDirty(net.minecraft.world.entity.decoration.ItemFrame.DATA_ITEM);
+                    }
+                }
+            }
+            // CloudPlane end - update more data on locale change
         }
         // CraftBukkit end
         // Paper start - don't call options events on login
diff --git a/src/main/java/net/minecraft/world/entity/Display.java b/src/main/java/net/minecraft/world/entity/Display.java
index a658943669cdfd49f66ba713505d11b33306ed86..f3a3fd37de7660738ef843f226a30fed1363ddce 100644
--- a/src/main/java/net/minecraft/world/entity/Display.java
+++ b/src/main/java/net/minecraft/world/entity/Display.java
@@ -791,7 +791,7 @@ public abstract class Display extends Entity {
         public static final byte FLAG_ALIGN_RIGHT = 16;
         private static final byte INITIAL_TEXT_OPACITY = -1;
         public static final int INITIAL_BACKGROUND = 1073741824;
-        private static final EntityDataAccessor<Component> DATA_TEXT_ID = SynchedEntityData.defineId(Display.TextDisplay.class, EntityDataSerializers.COMPONENT);
+        public static final EntityDataAccessor<Component> DATA_TEXT_ID = SynchedEntityData.defineId(Display.TextDisplay.class, EntityDataSerializers.COMPONENT); // CloudPlane - private -> public
         public static final EntityDataAccessor<Integer> DATA_LINE_WIDTH_ID = SynchedEntityData.defineId(Display.TextDisplay.class, EntityDataSerializers.INT);
         public static final EntityDataAccessor<Integer> DATA_BACKGROUND_COLOR_ID = SynchedEntityData.defineId(
             Display.TextDisplay.class, EntityDataSerializers.INT
diff --git a/src/main/java/net/minecraft/world/entity/Entity.java b/src/main/java/net/minecraft/world/entity/Entity.java
index 4cb548ea68b3845b45c720b308e9d0eabf27184c..e908e58eebda88d66ece593ff05c1868d2806d29 100644
--- a/src/main/java/net/minecraft/world/entity/Entity.java
+++ b/src/main/java/net/minecraft/world/entity/Entity.java
@@ -363,7 +363,7 @@ public abstract class Entity implements SyncedDataHolder, Nameable, EntityAccess
     protected static final int FLAG_GLOWING = 6;
     protected static final int FLAG_FALL_FLYING = 7;
     private static final EntityDataAccessor<Integer> DATA_AIR_SUPPLY_ID = SynchedEntityData.defineId(Entity.class, EntityDataSerializers.INT);
-    private static final EntityDataAccessor<Optional<Component>> DATA_CUSTOM_NAME = SynchedEntityData.defineId(Entity.class, EntityDataSerializers.OPTIONAL_COMPONENT);
+    protected static final EntityDataAccessor<Optional<Component>> DATA_CUSTOM_NAME = SynchedEntityData.defineId(Entity.class, EntityDataSerializers.OPTIONAL_COMPONENT); // CloudPlane - private -> protected
     private static final EntityDataAccessor<Boolean> DATA_CUSTOM_NAME_VISIBLE = SynchedEntityData.defineId(Entity.class, EntityDataSerializers.BOOLEAN);
     private static final EntityDataAccessor<Boolean> DATA_SILENT = SynchedEntityData.defineId(Entity.class, EntityDataSerializers.BOOLEAN);
     private static final EntityDataAccessor<Boolean> DATA_NO_GRAVITY = SynchedEntityData.defineId(Entity.class, EntityDataSerializers.BOOLEAN);
